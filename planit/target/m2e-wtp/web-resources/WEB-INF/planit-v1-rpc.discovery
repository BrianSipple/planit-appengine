{
 "kind": "discovery#rpcDescription",
 "etag": "\"MKGA2miAJpVGF7yQTQhsoDXpye8/bUu1iNvzwXsxe8x4FT0U5337kQA\"",
 "discoveryVersion": "v1",
 "id": "planit:v1",
 "name": "planit",
 "version": "v1",
 "description": "API for the Conference Central Backend application.",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://planit-web.appspot.com/_ah/api/",
 "rpcUrl": "https://planit-web.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "Announcement": {
   "id": "Announcement",
   "type": "object",
   "properties": {
    "message": {
     "type": "string"
    }
   }
  },
  "Comment": {
   "id": "Comment",
   "type": "object",
   "properties": {
    "commentId": {
     "type": "string",
     "format": "int64"
    },
    "createdDate": {
     "type": "string",
     "format": "date-time"
    },
    "eventKeyString": {
     "type": "string"
    },
    "text": {
     "type": "string"
    },
    "userId": {
     "type": "string"
    }
   }
  },
  "CommentForm": {
   "id": "CommentForm",
   "type": "object",
   "properties": {
    "createdDate": {
     "type": "string",
     "format": "date-time"
    },
    "text": {
     "type": "string"
    }
   }
  },
  "Event": {
   "id": "Event",
   "type": "object",
   "properties": {
    "address1": {
     "type": "string"
    },
    "address2": {
     "type": "string"
    },
    "attendees": {
     "type": "integer",
     "format": "int32"
    },
    "attendingUserIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "categories": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "city": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "endDate": {
     "type": "string",
     "format": "date-time"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "maxAttendees": {
     "type": "integer",
     "format": "int32"
    },
    "month": {
     "type": "integer",
     "format": "int32"
    },
    "organizerDisplayName": {
     "type": "string"
    },
    "registrationsAvailable": {
     "type": "integer",
     "format": "int32"
    },
    "startDate": {
     "type": "string",
     "format": "date-time"
    },
    "state": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "websafeKey": {
     "type": "string"
    },
    "zip": {
     "type": "string"
    }
   }
  },
  "EventCollection": {
   "id": "EventCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Event"
     }
    }
   }
  },
  "EventForm": {
   "id": "EventForm",
   "type": "object",
   "properties": {
    "address1": {
     "type": "string"
    },
    "address2": {
     "type": "string"
    },
    "attendees": {
     "type": "integer",
     "format": "int32"
    },
    "categories": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "city": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "endDate": {
     "type": "string",
     "format": "date-time"
    },
    "maxAttendees": {
     "type": "integer",
     "format": "int32"
    },
    "organizerUserId": {
     "type": "string"
    },
    "startDate": {
     "type": "string",
     "format": "date-time"
    },
    "state": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "zip": {
     "type": "string"
    }
   }
  },
  "EventQueryForm": {
   "id": "EventQueryForm",
   "type": "object",
   "properties": {
    "filters": {
     "type": "array",
     "items": {
      "$ref": "Filter"
     }
    }
   }
  },
  "Field": {
   "id": "Field",
   "type": "string",
   "enum": [
    "ATTENDEES",
    "CATEGORY",
    "CITY",
    "MAX_ATTENDEES",
    "MONTH",
    "REGISTRATIONS_AVAILABLE"
   ],
   "enumDescriptions": [
    "",
    "",
    "",
    "",
    "",
    ""
   ]
  },
  "Filter": {
   "id": "Filter",
   "type": "object",
   "properties": {
    "field": {
     "$ref": "Field"
    },
    "operator": {
     "$ref": "Operator"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "Operator": {
   "id": "Operator",
   "type": "string",
   "enum": [
    "EQ",
    "GT",
    "GTEQ",
    "LT",
    "LTEQ",
    "NE"
   ],
   "enumDescriptions": [
    "",
    "",
    "",
    "",
    "",
    ""
   ]
  },
  "PizzaTopping": {
   "id": "PizzaTopping",
   "type": "string",
   "enum": [
    "CHEESE",
    "MUSHROOM",
    "NOT_SPECIFIED",
    "OTHER",
    "PEPPERONI",
    "SAUSAGE",
    "VEGGIE"
   ],
   "enumDescriptions": [
    "",
    "",
    "",
    "",
    "",
    "",
    ""
   ]
  },
  "Profile": {
   "id": "Profile",
   "type": "object",
   "properties": {
    "age": {
     "type": "integer",
     "format": "int32"
    },
    "displayName": {
     "type": "string"
    },
    "eventsToAttendKeys": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "mainEmail": {
     "type": "string"
    },
    "pizzaTopping": {
     "$ref": "PizzaTopping"
    },
    "teeShirtSize": {
     "$ref": "TeeShirtSize"
    },
    "userId": {
     "type": "string"
    }
   }
  },
  "ProfileCollection": {
   "id": "ProfileCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Profile"
     }
    }
   }
  },
  "ProfileForm": {
   "id": "ProfileForm",
   "type": "object",
   "properties": {
    "age": {
     "type": "integer",
     "format": "int32"
    },
    "displayName": {
     "type": "string"
    },
    "pizzaTopping": {
     "$ref": "PizzaTopping"
    },
    "teeShirtSize": {
     "$ref": "TeeShirtSize"
    }
   }
  },
  "TeeShirtSize": {
   "id": "TeeShirtSize",
   "type": "string",
   "enum": [
    "L",
    "M",
    "NOT_SPECIFIED",
    "S",
    "XL",
    "XS",
    "XXL",
    "XXXL"
   ],
   "enumDescriptions": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
   ]
  },
  "WrappedBoolean": {
   "id": "WrappedBoolean",
   "type": "object",
   "properties": {
    "reason": {
     "type": "string"
    },
    "result": {
     "type": "boolean"
    }
   }
  }
 },
 "methods": {
  "planit.createComment": {
   "id": "planit.createComment",
   "parameters": {
    "resource": {
     "$ref": "CommentForm"
    },
    "webSafeEventKey": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "resource",
    "websafeEventKey",
    "webSafeEventKey"
   ],
   "returns": {
    "$ref": "Comment"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.createEvent": {
   "id": "planit.createEvent",
   "parameters": {
    "resource": {
     "$ref": "EventForm"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Event"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.getAnnouncement": {
   "id": "planit.getAnnouncement",
   "allowGet": true,
   "returns": {
    "$ref": "Announcement"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.getEvent": {
   "id": "planit.getEvent",
   "allowGet": true,
   "parameters": {
    "websafeEventKey": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "websafeEventKey"
   ],
   "returns": {
    "$ref": "Event"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.getEventAttendeeProfiles": {
   "id": "planit.getEventAttendeeProfiles",
   "allowGet": true,
   "parameters": {
    "websafeEventKey": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "websafeEventKey"
   ],
   "returns": {
    "$ref": "ProfileCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.getEventsCreated": {
   "id": "planit.getEventsCreated",
   "returns": {
    "$ref": "EventCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.getEventsToAttend": {
   "id": "planit.getEventsToAttend",
   "allowGet": true,
   "returns": {
    "$ref": "EventCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.getProfile": {
   "id": "planit.getProfile",
   "allowGet": true,
   "returns": {
    "$ref": "Profile"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.queryEvents": {
   "id": "planit.queryEvents",
   "parameters": {
    "resource": {
     "$ref": "EventQueryForm"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "EventCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.queryEventsCustomFilter": {
   "id": "planit.queryEventsCustomFilter",
   "returns": {
    "$ref": "EventCollection"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.registerForEvent": {
   "id": "planit.registerForEvent",
   "parameters": {
    "websafeEventKey": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "websafeEventKey"
   ],
   "returns": {
    "$ref": "WrappedBoolean"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.saveProfile": {
   "id": "planit.saveProfile",
   "parameters": {
    "resource": {
     "$ref": "ProfileForm"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Profile"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "planit.unregisterFromEvent": {
   "id": "planit.unregisterFromEvent",
   "parameters": {
    "websafeEventKey": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "websafeEventKey"
   ],
   "returns": {
    "$ref": "WrappedBoolean"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
